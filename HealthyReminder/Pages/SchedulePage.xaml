<Page x:Class="HealthyReminder.Pages.SchedulePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:local="clr-namespace:HealthyReminder.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="SchedulePage" Background="#FFEFEFEF">

    <Page.Resources>
        <Style x:Key="titlePlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="NoWrap"
                                 MaxLength="20" Background="Transparent" Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="notificationPlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap"
                                 Background="Transparent" Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="120" />
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="70" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="BackBtn" Content="&lt; Back" FontSize="30" FontWeight="Bold" Foreground="DarkSlateGray"
                HorizontalAlignment="Left" Padding="15,0,15,5" Background="Transparent" BorderBrush="Transparent" Click="BackBtn_Click" />
            <Button x:Name="DeleteBtn" Grid.Column="1" Content="🗑️ Delete" FontSize="30" FontWeight="Bold" Foreground="DarkSlateGray"
                HorizontalAlignment="Right" Padding="15,0,15,5" Background="Transparent" BorderBrush="Transparent" Click="DeleteBtn_Click" />
            <Button x:Name="DefaultBtn" Grid.Column="1" Content="Default Value" FontSize="30" FontWeight="Bold" Foreground="DarkSlateGray"
                HorizontalAlignment="Right" Padding="15,0,15,5" Background="Transparent" BorderBrush="Transparent" Click="DefaultBtn_Click" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Content="Remind me in " FontSize="50" VerticalAlignment="Center" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <TextBox x:Name="NumericTextBox" Grid.Row="1" FontSize="45" Text="5" BorderThickness="0" MaxLength="3"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent"
                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                         PreviewKeyDown="NumericTextBox_KeyDown" LostFocus="NumericTextBox_LostFocus" />
                <RepeatButton Background="Transparent" BorderBrush="Transparent"
                        Click="NumericUpBtn_Click" VerticalContentAlignment="Top" >
                    <Image Source="../Resources/Up.png" />
                </RepeatButton>
                <RepeatButton Grid.Row="2" Background="Transparent" BorderBrush="Transparent"
                        Click="NumericDownBtn_Click">
                    <Image Source="../Resources/Down.png" />
                </RepeatButton>
            </Grid>
            <Label Grid.Column="2" Content=" Min" FontSize="50" VerticalAlignment="Center" />
        </Grid>
        <TextBox x:Name="TitleTextBox" Grid.Row="2" Style="{StaticResource titlePlaceHolder}" Tag="Reminder Title"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 FontSize="30" Foreground="DarkGray" Text="" MaxLength="20"/>
        <!--<xctk:IntegerUpDown Name="UpDownControl" Grid.Row="2" FontSize="30" Watermark="Enter Positive Integer"
                            Value="30" Increment="1" Minimum="5" Maximum="999" />-->
        <TextBox x:Name="NotificationTextBox" Grid.Row="3" Style="{StaticResource notificationPlaceHolder}" Tag="Notification Message"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 FontSize="30" Foreground="DarkGray" Text=""/>
        <Button x:Name="SaveBtn" Grid.Row="4" Content="Save" FontSize="30" FontWeight="Bold" Foreground="DarkSlateGray"
                HorizontalAlignment="Stretch" Padding="15,0,15,5" Background="Transparent" BorderBrush="Transparent" Click="SaveBtn_Click" />
    </Grid>
</Page>
